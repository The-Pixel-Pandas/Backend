# Generated by Django 5.2 on 2025-05-19 14:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("user_name", models.CharField(max_length=100, unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("age", models.IntegerField(default=0)),
                (
                    "avatar",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                ("gmail", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=255)),
                ("all_rank", models.IntegerField(default=0)),
                ("monthly_rank", models.IntegerField(default=0)),
                ("weekly_rank", models.IntegerField(default=0)),
                (
                    "total_balance",
                    models.DecimalField(decimal_places=2, default=10000, max_digits=10),
                ),
                (
                    "wallet_field",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "user_token",
                    models.CharField(default=uuid.uuid4, max_length=255, unique=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Medal",
            fields=[
                ("medal_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("badge", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                ("news_id", models.AutoField(primary_key=True, serialize=False)),
                ("news_description", models.TextField()),
                ("news_topic", models.CharField(max_length=100)),
                ("news_type", models.CharField(max_length=50)),
                ("news_tag", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Option",
            fields=[
                ("option_id", models.AutoField(primary_key=True, serialize=False)),
                ("description", models.CharField(max_length=255)),
                (
                    "option_volume",
                    models.DecimalField(decimal_places=2, default=10.0, max_digits=10),
                ),
                (
                    "chance",
                    models.DecimalField(decimal_places=2, default=50.0, max_digits=5),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SiteBalance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1000000.00"), max_digits=15
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="profile",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("bio", models.TextField(blank=True, max_length=500)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "profit",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "volume",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("winrate", models.IntegerField(default=0)),
                ("rank_total_profit", models.IntegerField(default=0)),
                ("rank_total_volume", models.IntegerField(default=0)),
                ("rank_monthly_profit", models.IntegerField(default=0)),
                ("rank_monthly_volume", models.IntegerField(default=0)),
                ("rank_weekly_profit", models.IntegerField(default=0)),
                ("rank_weekly_volume", models.IntegerField(default=0)),
                ("medals", models.JSONField(default=list)),
                (
                    "avatar",
                    models.PositiveIntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                        ],
                        default=1,
                    ),
                ),
                ("job", models.CharField(blank=True, max_length=100, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("age", models.IntegerField(blank=True, null=True)),
                (
                    "favorite_subject",
                    models.CharField(
                        blank=True, default="Not specified", max_length=100
                    ),
                ),
                (
                    "total_balance",
                    models.DecimalField(
                        decimal_places=2, default=10000.0, max_digits=15
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Leaderboard",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("start_time", models.DateTimeField()),
                ("type_id", models.IntegerField()),
                (
                    "leaderboard_token",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                (
                    "total_balance",
                    models.DecimalField(decimal_places=2, default=10000, max_digits=10),
                ),
                (
                    "wallet_field",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("all_rank", models.IntegerField(default=0)),
                ("monthly_rank", models.IntegerField(default=0)),
                ("weekly_rank", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leaderboards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"db_table": "leaderboard",},
        ),
        migrations.CreateModel(
            name="Bet",
            fields=[
                ("bet_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "option",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bets",
                        to="accounts.option",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("question_id", models.AutoField(primary_key=True, serialize=False)),
                ("question_description", models.TextField()),
                ("question_topic", models.CharField(max_length=100)),
                ("question_type", models.CharField(max_length=50)),
                ("question_tag", models.CharField(max_length=50)),
                (
                    "question_volume",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("end_time", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "winning_option",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="winning_questions",
                        to="accounts.option",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="option",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="options",
                to="accounts.question",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("like_number", models.IntegerField()),
                ("comment_date", models.DateField()),
                ("comment_time", models.TimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "news",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="accounts.news"
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.question",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TransactionHistory",
            fields=[
                ("transaction_id", models.AutoField(primary_key=True, serialize=False)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("time", models.TimeField()),
                ("date", models.DateField()),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="accounts.question",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_balance",
                    models.DecimalField(decimal_places=2, default=10000, max_digits=10),
                ),
                (
                    "user_id_fk",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wallet",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
